
    //연결리스트 명령어의 기본 알고리즘




    //인덱서를 사용하지 않는다.
   class MyLinkedListNode<T>
    {
        public T Data;
        public MyLinkedListNode<T> Next;
        public MyLinkedListNode<T> Prev;
    }

    class MyLinkedList<T>
    {  //노드 구현
        public MyLinkedListNode<T> Head=null;//첫번째
        public MyLinkedListNode<T> Tail=null;//마지막
        public int Count = 0;

        public MyLinkedListNode<T>AddLast(T data) //_data3.AddLast() 부분
        {
            MyLinkedListNode<T> newRoom = new MyLinkedListNode<T>();
            newRoom.Data = data;
            //만약에 아직 방이 아예 없었다면, 새로 추가한 첫번째 방이 곧 Head이다.
            if (Head == null)
                Head = newRoom;

            //101 102 103 에서 104를 추가한다면 기존의 마지막 방과 새로 추가한 방을 서로 연결을 해준다.
            if(Tail !=null)
            {
                Tail.Next = newRoom;
                newRoom.Prev = Tail;
            }

            //새로 추가된 방을 마지막 방으로 인식한다.
            Tail = newRoom;
            Count++;
            return newRoom;
        }

        //101 102 103 104 105 가정
        public void Remove(MyLinkedListNode<T> room) // _data3.Remove 구현
        {
            //기존의 첫번째 방의 다음방을 첫번째 방으로 인정한다.(첫번째 항목을 삭제 했을 경우)  
            if (Head == room)
                Head = Head.Next;

            //기존의 마지막방의 이전방을 마지막 방으로 인정한다.(마지막 항목을 삭제 했을 경우)
            if (Tail == room)
                Tail = Tail.Prev;

            

            // 103을 삭제한다고 하면 그 이전 값(102)를 다음값(104)에 연결한다.
            if (room.Prev != null)
                room.Prev.Next = room.Next;// 이전방의 다음방은 = 다음 방이다. 
            //103기준에서 이전방 102의 다음방(103은 지워짐)은 104이다.
            //여기서 null 체크를 해야한다 room.Next.Prev에서 Next와 Prev를 확인하기 때문에 이전값이 null이면 에러 발생

            // 102에서 104를 연결 다리를 만들었으면 104도 102와 연결할 다리를 만들어야 한다. 
            if (room.Next != null)
                room.Next.Prev = room.Prev;//(103기준)다음방의 이전방(102)= 이전방이다
            Count--;
        }



    }

    internal class Map
    {
        public int[] _data = new int[25];// 배열
        public MyLinkedList<int> _data3 = new MyLinkedList<int>();//연결리스트(리스트의 마지막)

        public void Initialize()
        {
            _data3.AddLast(101);
            _data3.AddLast(102);
            MyLinkedListNode<int>node =_data3.AddLast(103);
            _data3.AddLast(104);
            _data3.AddLast(105);

            _data3.Remove(node);
        }
